name: Branch Protection CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/ci-rust:latest
      options: -v /var/run/docker.sock:/var/run/docker.sock --dns 127.0.0.11 --dns 8.8.8.8
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - uses: actions/checkout@v4


      - name: Start Docker Compose services
        run: |
          cd testing
          . ./.env 
          docker compose down -v
          docker compose up -d --build --wait
          docker network connect $SERVICES_NETWORK_NAME $(hostname)
          cd ..

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        if: false
        run: cargo fmt -- --check

      - name: Run clippy
        if: false
        run: cargo clippy -- -D warnings

      - name: Run unit tests
        if: false
        run: |
          cargo test --lib --bins

      - name: Run integration tests
        run: |
          cargo test --package switchgear-testing --lib services::tests::test_services -- --nocapture
          cargo test --test discovery
          cargo test --test offer
#          cargo test --test ln
#          cargo test --test features

      - name: Stop Docker Compose services
        if: always()
        run: docker compose -f testing/docker-compose.yml down -v